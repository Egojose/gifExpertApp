{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","alert","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","res","json","data","console","log","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uKAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,kBACDJ,GAAcK,MAAM,iCAClBL,IACCF,GAAc,SAAAQ,GAAG,OAAMN,GAAN,mBAAqBM,OACtCL,EAAc,MAKlB,SACG,uBACCM,KAAK,OACLC,MAAOR,EACPS,SAjBkB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCNlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEFI,MAAMF,GAFJ,cAEdG,EAFc,gBAGCA,EAAIC,OAHL,uBAGbC,EAHa,EAGbA,KACPC,QAAQC,IAAIF,GACNG,EAAOH,EAAKI,KAAI,YAClB,MAAO,CACHC,GAFuC,EAAvBA,GAGhBC,MAHuC,EAAnBA,MAIpBX,IAJuC,EAAZY,OAIfC,iBAAiBb,QAGrCM,QAAQC,IAAIC,GAZQ,kBAabA,GAba,4CAAH,sDCERM,G,KAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,IAChC,OACI,sBAAKe,UAAU,OAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKN,IACpB,4BAAKA,SCHJO,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECHwB,SAAEA,GAE1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPzB,EAAUC,GACTyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAAErB,IAEEsB,EDd0BK,CAAa3B,GAAjCc,EAAb,EAAQP,KAAac,EAArB,EAAqBA,QAIrB,OACE,qCACE,6BAAKrB,IACJqB,EAAU,cAAe,eAC1B,qBAAKJ,UAAU,YAAf,SACGH,EAAOH,KAAI,SAACiB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEgBnBiB,EA3BM,WAGjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK4C,EAAWnB,KAAI,SAACX,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCjBzB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.062197b4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        !inputValue && alert('Debe agregar una categorÃ­a')\r\n        if(inputValue) {\r\n            setCategories(cat => [ inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange = {handleInputChange}\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=gFvXbiD6hcGW63vrvaVGCnUYmllz6bHI`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    console.log(data)\r\n    const gifs = data.map(({id, title, images}) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: images.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs)\r\n    return gifs;\r\n   \r\n}","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    \r\n\r\n\r\n    return (\r\n      <>\r\n        <h3>{category}</h3>\r\n        {loading ? 'Cargando...': 'Data cargada'}\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts( category )\r\n        .then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch', 'Samurai X', 'Dragon ball'];\r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n//    const handleAdd = () => {\r\n//         setCategories(cats => [...cats, 'X men'])\r\n//    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif expert app</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                    />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}